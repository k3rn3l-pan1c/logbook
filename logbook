#!/bin/bash	
#
#

# Exit script if an undefined variable is used and when a command exits with a non-zero status
set -u -e 
set -o pipefail 	

#-----------------------------------------------------------------------------#
# COLOURS #
#-----------------------------------------------------------------------------#
BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BROWN='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LGRAY='\033[0;37m'
DGRAY='\033[1;30m'
LRED='\033[1;31m'
LGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LBLUE='\033[1;34m'
LPURPLE='\033[1;35m'
LCYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m'	#No Color

#-----------------------------------------------------------------------------#
# PATHS #
#-----------------------------------------------------------------------------#
LOGBOOK_PATH=/media/martinspedro/DATA/.logbook
COURSES_FILE=$LOGBOOK_PATH/courses_list
JOURNAL_PATH=$LOGBOOK_PATH/journal
DOC_PATH=$LOGBOOK_PATH/documents


#-----------------------------------------------------------------------------#
# SOURCE FILES #
#-----------------------------------------------------------------------------#
source journal
source courses
source documents

#-----------------------------------------------------------------------------#
# SCRIPT AREA #
#-----------------------------------------------------------------------------#
if [ $# -ge 1 ] && [ $# -le 3 ]; then
	
	current_path=$(pwd)
	case $1 in
		-j|--journal)
			new-journal-entry
		;;

		-t|--tag)
			if [ $# -eq 2 ]; then
				search-journal "$2"
			else
				echo "USAGE: logbook -t|--tag <tag_name>"
				exit 1
			fi
		;;

		-q|--quote)
			if [ $# -eq 1 ]; then
				search-journal ">"
			else
				echo "USAGE: logbook -q|--quote"
				exit 1
			fi
		;;

		--init-course)
			if [ $# -eq 2 ]; then
				init-course $2
			else
				echo "USAGE: logbook --init-course <directory key>"
				exit 1
			fi
		;;
	
		-c|--course)
			if [ $# -eq 3 ]; then
				course-new-raw-note $2 $3
			else
				echo "USAGE: logbook -c|--course <course name>"
				exit 1
			fi
		;;

		-lc|--list-courses)
			list-courses
		;;

		-cd)
			if [ $# -eq 2 ]; then
				change-directory $2
			else
				echo "USAGE: logbook -cd <course name>"
				exit 1
			fi

		;;

		--new-doc)
			if [ $# -eq 2 ]; then
				new-doc $2
			else
				echo "USAGE: logbook --new-doc <new document name>"
				exit 1
			fi
		;;
		
		--doc)
			if [ $# -eq 2 ]; then
				open-doc $2
			else
				echo "USAGE: logbook --doc <document name>"
				exit 1
			fi
		;;

		-ld|--list-docs)
			list-docs
		;;

		-h|--help)
		echo -ne "Logbook v0.1
USAGE: logbook <options> <args>\n
options
   -j|--journal:         Creates a new journal entry. 	
	-t|--tag <tag_name>:  Fetch all journal entries by <tag_name>
	-q|--quote:           Fetch all quotes in journal entries

   --init-course:        Initializates a new course in the current directory.
   -c|--course:          Adds a new raw note to a previously created course unit.
   -lc|--list-courses:	 Lists all courses

	--new-doc:				 Initializes a new document
	--doc:					 Continues editing a previously initalized document
	-ld|--list-documents: Lists all initialized documents

	-h|--help:            Shows this menu.\n"
	

		;;

		--default)
		shift # past argument
		;;
		
		*)    # unknown option
		POSITIONAL+=("$1") # save it in an array for later
		shift # past argument
		;;
		esac


	# Return to original path
	cd "$current_path"
else
	echo "ERROR. No argumenst provided"
	exit 1
fi


